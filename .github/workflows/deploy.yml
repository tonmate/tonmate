name: Test Tonmate

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

env:
  NODE_VERSION: '20.x'

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ vars.NEXTAUTH_URL }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup test environment
      run: |
        cp environment.example .env.local
        echo "DATABASE_URL=$DATABASE_URL" >> .env.local
        echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env.local
        echo "NEXTAUTH_URL=$NEXTAUTH_URL" >> .env.local
        echo "OPENAI_API_KEY=$OPENAI_API_KEY" >> .env.local
        echo "JWT_SECRET=$JWT_SECRET" >> .env.local
        echo "ENCRYPTION_KEY=$ENCRYPTION_KEY" >> .env.local

    - name: Generate Prisma client
      run: npm run db:generate

    - name: Push database schema
      run: npm run db:push

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Build application
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Validate environment
      run: npm run validate:env

    - name: Security audit
      run: npm run security:audit
