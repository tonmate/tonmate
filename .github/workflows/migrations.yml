name: Reusable Migrations Workflow

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: "20.x"
      environment:
        required: false
        type: string
        default: "production"
      tag:
        required: false
        type: string
        default: "latest"
      image-name:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      SSH_USER:
        required: true
      VPS_HOST:
        required: true
      DATABASE_URL:
        required: true
      GH_TOKEN:
        required: true

jobs:
  migrations:
    name: Run Migrations
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Setup SSH for migrations
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Run migrations inside app container
        run: |
          # Determine target environment
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then 
            targetEnvironment=production
          else 
            targetEnvironment=staging
          fi

          # Override with input if provided
          if [ "${{ inputs.environment }}" != "" ]; then
            targetEnvironment=${{ inputs.environment }}
          fi

          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.VPS_HOST }} "
            set -e

            echo 'Running migrations inside existing app container...'

            # Run prisma migrate deploy inside the running container
            docker exec tonmate-$targetEnvironment npx prisma migrate deploy

            echo 'âœ… Migrations finished successfully!'
          "
