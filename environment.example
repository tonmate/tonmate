# ===========================================
# TONMATE - AI CUSTOMER SUPPORT PLATFORM
# Environment Configuration
# ===========================================

# NextAuth Configuration (REQUIRED)
NEXTAUTH_SECRET=your_secret_here_minimum_32_characters_long_generate_with_openssl_rand_base64_32
NEXTAUTH_URL=http://localhost:3000

# Database Configuration (REQUIRED)
# Production (PostgreSQL - recommended)
DATABASE_URL="postgresql://username:password@localhost:5432/tonmate"
# DATABASE_URL="postgresql://username:password@host:port/database?sslmode=require" # For cloud providers

# Development (SQLite - deprecated, not recommended)
# DATABASE_URL="file:./dev.db"


# Application Configuration
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Logging Configuration
LOG_LEVEL=info
# Options: error, warn, info, debug

# Security & Encryption Configuration
ENCRYPTION_KEY=your_32_character_encryption_key_here

# Rate Limiting Configuration
RATE_LIMIT_ENABLED=true

# File Upload & Crawling Configuration
MAX_FILE_SIZE=10485760
MAX_CRAWL_DEPTH=5

# Shop Information (Optional - for demo/shop tools)
# SHOP_NAME="Demo Fashion Store"
# SHOP_DESCRIPTION="Trendy fashion items for all ages"
# SHOP_CONTACT_EMAIL="support@demofashion.com"
# SHOP_CONTACT_PHONE="+1234567890"
# SHOP_POLICIES="30-day return policy, free shipping over $50"

# Instagram Webhook Configuration (Optional)
# WEBHOOK_VERIFY_TOKEN=your_webhook_verify_token
# INSTAGRAM_ACCESS_TOKEN=your_instagram_access_token

# ===========================================
# SECURITY NOTES
# ===========================================
# 1. Never commit actual secrets to version control
# 2. Use strong, unique secrets for each environment
# 3. Rotate secrets regularly
# 4. Use environment-specific configuration files
# 5. Enable SSL/TLS in production
# 6. Consider using a secret management service

# ===========================================
# QUICK SETUP COMMANDS
# ===========================================
# Generate secure secrets:
# openssl rand -base64 32
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Database setup:
# npm run db:generate
# npm run db:push
# npm run db:seed (optional)

# Start development:
# npm run dev

# Build for production:
# npm run build
# npm run start
